<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Hash;

class UserFactory extends Factory
{

    protected $cities = ['Alexandria', 'Aswan', 'Asyut', 'Beheira', 'Beni Suef', 'Cairo', 'Dakahlia', 'Damietta', 'Faiyum', 'Gharbia', 'Giza', 'Ismailia', 'Kafr El Sheikh', 'Luxor', 'Matruh', 'Minya', 'Monufia', 'New Valley', 'North Sinai', 'Port Said', 'Qalyubia', 'Qena', 'Red Sea', 'Sharqia', 'Sohag', 'South Sinai', 'Suez'];

    /**
     * Define the model's default state.
     *
     * @return array
     */
    public function definition()
    {
        $names = [
            'Amal',
            'Amani',
            'Amira',
            'Arwa',
            'Aya',
            'Basma',
            'Bayan',
            'Bushra',
            'Dalal',
            'Dalia',
            'Dalila',
            'Dana',
            'Dania',
            'Dareen',
            'Dina',
            'Duaa',
            'Farida',
            'Fairouz',
            'Farah',
            'Habiba',
            'Hala',
            'Halima',
            'Hanifa',
            'Hawa',
            'Heba',
            'Ibtisam',
            'Iman',
            'Jude',
            'Jumanah',
            'Karima',
            'Khadija',
            'Khalida',
            'Khawla',
            'Lana',
            'Lara',
            'Latifa',
            'Leen',
            'Lina',
            'Loulia',
            'Maha',
            'Malak',
            'Malika',
            'Marwa',
            'Marya',
            'Maya',
            'Maysoon',
            'Mona',
            'Munira',
            'Munya',
            'Nabila',
            'Nadia',
            'Nadine',
            'Nada',
            'Nahla',
            'Naila',
            'Naima',
            'Najat',
            'Nasira',
            'Nesrine',
            'Nawal',
            'Neziha',
            'Nihal',
            'Nour',
            'Nuha',
            'Nura',
            'Oma',
            'Qamar',
            'Qadira',
            'Qistina',
            'Rabia',
            'Rahima',
            'Rania',
            'Rashida',
            'Reem',
            'Rihanna',
            'Ruqayya',
            'Sabah',
            'Safiyah',
            'Sahar',
            'Saida',
            'Salma',
            'Sajida',
            'Sakina',
            'Salma',
            'Samar',
            'Samira',
            'Sarah',
            'Shahd',
            'Shakira',
            'Shams',
            'Sherine',
            'Sumayya',
            'Tahira',
            'Taj',
            'Tala',
            'Tamara',
            'Tara',
            'Tamanna',
            'Tasnim',
            'Umm Kulthoum',
            'Wafaa',
            'Yara',
            'Yasmin',
            'Yumna',
            'Yusra',
            'Zayn',
            'Zaynab',
            'Zeina',
            'Abbas',
            'Abdul',
            'Abid',
            'Adil',
            'Adam',
            'Adib',
            'Adnan',
            'Afif',
            'Ahsan',
            'Ajmal',
            'Aladdin',
            'Alim',
            'Amer',
            'Amin',
            'Anwar',
            'Aqeel',
            'Asad',
            'Ashraf',
            'Ayman',
            'Aziz',
            'Azmi',
            'Badr',
            'Bakri',
            'Bahjat',
            'Bashir',
            'Bilal',
            'Burhan',
            'Dawoud',
            'Deen',
            'Ehsan',
            'Fadel',
            'Fadir',
            'Faheem',
            'Faisal',
            'Faiz',
            'Farid',
            'Fayez',
            'Fazli',
            'Fikri',
            'Ghassan',
            'Ghiath',
            'Habib',
            'Hadi',
            'Hakim',
            'Halim',
            'Hamza',
            'Hani',
            'Harun',
            'Hashem',
            'Hatem',
            'Haydar',
            'Hazem',
            'Hisham',
            'Hussein',
            'Abu Hurayrah',
            'Ibrahim',
            'Idrees',
            'Iqbal',
            'Iyad',
            'Ja’far',
            'Jalal',
            'Jaleel',
            'Jawad',
            'Jubair',
            'Kamal',
            'Kazem',
            'Khaled',
            'Louay',
            'Mahdi',
            'Mahmud',
            'Majid',
            'Malik',
            'Mansour',
            'Marwan',
            'Muhannad',
            'Mounir',
            'Mustaga',
            'Nadeem',
            'Nabeel',
            'Naji',
            'Najib',
            'Naeem',
            'Naseem',
            'Nasser',
            'Odai',
            'Othman',
            'Qasim',
            'Qadir',
            'Rabi’',
            'Raed',
            'Rahim',
            'Rami',
            'Rasheed',
            'Rayan',
            'Sa’id',
            'Saad',
            'Salah',
            'Salim',
            'Sami',
            'Sayf',
            'Shadi',
            'Shafiq',
            'Suheil',
            'Suleiman',
            'Taher',
            'Tahsin',
            'Talal',
            'Tareq',
            'Tawfiq',
            'Wafi',
            'Waheed',
            'Waleed',
            'Yahya',
            'Yaseen',
            'Yasser',
            'Yunus',
            'Yusef',
            'Zaid',
            'Zayn',
            'Zakariah',
            'Zaki'
        ];

        return [
            'name' => $this->faker->randomElement($names),
            'email' => $this->faker->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => Hash::make('Test1234'),
            'remember_token' => Str::random(10),
            'national_id'   =>  rand(2, 999),
            'address'       =>  $this->faker->address,
            'city'      =>      $this->faker->randomElement($this->cities),
            'birthdate' =>      $this->faker->dateTimeBetween('-60 years', '-7 years')->format('Y-m-d'),
            'gender' =>         $this->faker->randomElement(['Male', 'Female']),
            'role_id'       =>  $this->faker->numberBetween(1, 8),
            'country'       => $this->faker->randomElement(\Countries::getList('en')),
            'blood_type'    =>  $this->faker->randomElement(['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-']),
            'is_diagnosed'  =>  $this->faker->boolean(),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     *
     * @return \Illuminate\Database\Eloquent\Factories\Factory
     */
    public function unverified()
    {
        return $this->state(function (array $attributes) {
            return [
                'email_verified_at' => null,
            ];
        });
    }
}
